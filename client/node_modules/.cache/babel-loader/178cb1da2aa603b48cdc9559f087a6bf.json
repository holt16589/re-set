{"ast":null,"code":"var _jsxFileName = \"/Users/kevinholt/Documents/CS50/projects/re-set/client/src/components/ViewSetlist/ViewSetlist.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport Spinner from 'components/UI/Spinner/Spinner';\nimport 'components/ViewSetlist/ViewSetlist.css';\nimport * as spotifyFunctions from 'spotifyFunctions';\n\nclass ViewSetlist extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      setlistFM: null,\n      loading: false,\n      error: false,\n      spotify: null\n    };\n  }\n\n  componentDidMount() {\n    let spotifyTracks = [];\n    let setTracks = [];\n    let artistName = '';\n    this.setState({\n      loading: true\n    });\n    fetch('/api/getSetlist/' + this.props.match.params.id).then(response => {\n      response.json().then(response => {\n        artistName = response.artist.name;\n        this.setState({\n          loading: false\n        });\n        console.log(response);\n        Object.entries(response.sets.set).forEach(set => {\n          set[1].song.forEach(song => {\n            setTracks.push(song.name);\n            console.log(song.name);\n            spotifyTracks.push(spotifyFunctions.searchForSong(artistName, song.name)); // Promise.all(spotifyTracks).then((data)=>{\n            //   console.log(data);\n            // })\n          });\n        });\n      }).then(() => {\n        this.setState({\n          setlistFM: setTracks,\n          spotify: spotifyTracks\n        });\n        console.log('done!');\n      });\n    }).catch(error => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n      console.log(error);\n    });\n  }\n\n  fetchSpotifyTrack() {\n    console.log('hi!');\n  }\n\n  render() {\n    let displaySetlist = null;\n\n    if (this.state.loading) {\n      displaySetlist = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 26\n        }\n      });\n    }\n\n    if (this.state.setlistFM) {\n      displaySetlist = /*#__PURE__*/React.createElement(Container, {\n        className: \"setContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"setTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"titleStyle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, this.state.setObject.artist.name, \" at \", this.state.setObject.venue.name, \", \", this.state.setObject.eventDate))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 6,\n        className: \"set-overview\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"https://i.scdn.co/image/5ea794cf832550943d5f8122afcf5f23ee9d85b7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 6,\n        className: \"set-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"songList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 10\n        }\n      }, \"1. Started From the Bottom\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 10\n        }\n      }, \"2. Both\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 10\n        }\n      }, \"3. Mob Ties\")))));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, displaySetlist);\n  }\n\n}\n\nexport default withRouter(ViewSetlist);","map":{"version":3,"sources":["/Users/kevinholt/Documents/CS50/projects/re-set/client/src/components/ViewSetlist/ViewSetlist.js"],"names":["React","Component","withRouter","Container","Col","Row","Spinner","spotifyFunctions","ViewSetlist","constructor","props","state","setlistFM","loading","error","spotify","componentDidMount","spotifyTracks","setTracks","artistName","setState","fetch","match","params","id","then","response","json","artist","name","console","log","Object","entries","sets","set","forEach","song","push","searchForSong","catch","fetchSpotifyTrack","render","displaySetlist","setObject","venue","eventDate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport Spinner from 'components/UI/Spinner/Spinner';\nimport 'components/ViewSetlist/ViewSetlist.css';\nimport * as spotifyFunctions from 'spotifyFunctions';\n\nclass ViewSetlist extends Component {\n    constructor(props) {\n      super();\n      this.state = {\n        setlistFM: null,\n        loading: false,\n        error: false,\n        spotify: null\n}}\n\ncomponentDidMount(){\n  let spotifyTracks = [];\n  let setTracks = [];\n  let artistName = '';\n            this.setState({loading: true});\n                fetch('/api/getSetlist/' + this.props.match.params.id)\n                .then((response => {\n                    response.json().then(((response)=> {\n                        artistName = response.artist.name;\n                        this.setState({loading: false});\n                        console.log(response);\n                        Object.entries(response.sets.set).forEach(\n                          (set)=>{\n                            set[1].song.forEach(\n                              (song)=>{\n                                setTracks.push(song.name);\n                                console.log(song.name);\n                                spotifyTracks.push(spotifyFunctions.searchForSong(artistName, song.name));\n                                // Promise.all(spotifyTracks).then((data)=>{\n                                //   console.log(data);\n                                // })\n                              }\n                            )\n                          }\n                        )\n                        \n                    }))\n                    .then(\n                      () =>{\n                        this.setState({setlistFM: setTracks, spotify: spotifyTracks});\n                        console.log('done!');\n                      }\n                    )\n                }))\n                .catch((error => {\n                    this.setState({loading: false, error: true});\n                    console.log(error);\n                }))\n}\n\nfetchSpotifyTrack(){\n  console.log('hi!');\n}\n\n    render() {\n      let displaySetlist = null;\n\n      if(this.state.loading){\n        displaySetlist = <Spinner />\n      }\n      if(this.state.setlistFM){\n        displaySetlist = <Container className=\"setContainer\">\n        <Row className=\"setTitle\">\n        <h2><span className=\"titleStyle\">{this.state.setObject.artist.name} at {this.state.setObject.venue.name}, {this.state.setObject.eventDate}</span></h2>\n        </Row>\n        <Row>\n      <Col sm={12} md={6} className=\"set-overview\">\n     <img src=\"https://i.scdn.co/image/5ea794cf832550943d5f8122afcf5f23ee9d85b7\"/>\n     </Col>\n      <Col sm={12} md={6} className =\"set-details\">\n     <ul className=\"songList\">\n         <li>1. Started From the Bottom</li>\n         <li>2. Both</li>\n         <li>3. Mob Ties</li>\n     </ul>\n  </Col>\n  </Row>\n    </Container>;\n      }\n      \n\n      return (\n        <React.Fragment>\n          {displaySetlist}\n          </React.Fragment>\n      );\n    }\n  }\n\nexport default withRouter(ViewSetlist);"]},"metadata":{},"sourceType":"module"}