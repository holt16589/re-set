{"ast":null,"code":"var _jsxFileName = \"/Users/kevinholt/Documents/CS50/projects/re-set/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Search from 'containers/Search/Search';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport SearchResults from 'containers/SearchResults/SearchResults';\nimport Layout from 'components/Layout/Layout';\nimport About from 'components/About/About';\nimport Setlists from 'containers/Setlists/Setlists';\nimport ViewSetlist from 'components/ViewSetlist/ViewSetlist';\nimport TopArtists from 'containers/TopArtists/TopArtists';\nimport Login from 'components/Login/Login';\nimport * as spotifyFunctions from 'spotifyFunctions';\nlibrary.add(fab);\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = spotifyFunctions.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      userInfo: ''\n    };\n\n    if (params.access_token) {\n      spotifyFunctions.setToken(params);\n    }\n  }\n\n  componentDidMount() {\n    //get display name to show in the navbar \n    if (this.state.loggedIn) {\n      spotifyFunctions.getDisplayName().then(response => {\n        this.setState({\n          userInfo: response\n        });\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Layout, {\n      loggedIn: this.state.loggedIn,\n      displayName: this.state.userInfo.display_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n        loggedIn: this.state.loggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 14\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      render: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/results\",\n      component: SearchResults,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/topartists\",\n      component: TopArtists,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/setlists\",\n      component: Setlists,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/setlist/:id\",\n      render: props => /*#__PURE__*/React.createElement(ViewSetlist, Object.assign({}, props, {\n        userID: this.state.userInfo.id,\n        loggedIn: this.state.loggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 14\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kevinholt/Documents/CS50/projects/re-set/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Search","library","fab","SearchResults","Layout","About","Setlists","ViewSetlist","TopArtists","Login","spotifyFunctions","add","App","constructor","params","getHashParams","state","loggedIn","access_token","userInfo","setToken","componentDidMount","getDisplayName","then","response","setState","console","log","catch","error","render","display_name","props","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Search from 'containers/Search/Search';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport SearchResults from 'containers/SearchResults/SearchResults';\nimport Layout from 'components/Layout/Layout';\nimport About from 'components/About/About';\nimport Setlists from 'containers/Setlists/Setlists';\nimport ViewSetlist from 'components/ViewSetlist/ViewSetlist';\nimport TopArtists from 'containers/TopArtists/TopArtists';\nimport Login from 'components/Login/Login';\nimport * as spotifyFunctions from 'spotifyFunctions';\n\nlibrary.add(fab);\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    const params = spotifyFunctions.getHashParams();\n    this.state={\n      loggedIn: params.access_token  ? true : false,\n      userInfo: ''\n    }\n    if (params.access_token){\n      spotifyFunctions.setToken(params);\n    }\n  }\n\n  componentDidMount () {\n    //get display name to show in the navbar \n    if(this.state.loggedIn){\n      spotifyFunctions.getDisplayName()\n.then((response =>  {\n  this.setState(\n  {userInfo: response});\n console.log(response);\n  }\n ))\n .catch(function(error){\n   console.log(error);\n });\n  }\n    }\n\n\n  render() {\n      return (\n        <Router>\n      <Layout loggedIn={this.state.loggedIn} displayName={this.state.userInfo.display_name} >\n          <Switch>\n            <Route exact path=\"/\" render={props =>\n            (<Search {...props} loggedIn={this.state.loggedIn} />)}/>\n            <Route path=\"/login\" render={Login}/>\n             <Route path=\"/results\" component={SearchResults} />\n             <Route path=\"/topartists\" component={TopArtists} />\n             <Route path=\"/about\" component={About} />\n             <Route path=\"/setlists\" component={Setlists} />\n             <Route exact path=\"/setlist/:id\" render={props =>\n            (<ViewSetlist {...props} userID={this.state.userInfo.id} loggedIn={this.state.loggedIn}/>)}/>\n          </Switch>\n        </Layout>\n  </Router>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}