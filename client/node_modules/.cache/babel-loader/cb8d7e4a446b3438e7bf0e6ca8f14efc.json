{"ast":null,"code":"var _jsxFileName = \"/Users/kevinholt/Documents/CS50/projects/re-set/client/src/containers/Setlists/Setlists.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport SetlistResult from 'components/SetlistResult/SetlistResult';\nimport { withRouter } from \"react-router\";\nimport 'containers/Setlists/Setlists.css';\nimport Spinner from 'components/UI/Spinner/Spinner';\n\nclass Setlists extends Component {\n  constructor() {\n    super();\n    this.state = {\n      artistName: '',\n      loading: false,\n      pageResults: null,\n      nextPageNum: 1\n    };\n  }\n\n  componentDidMount() {\n    let artist = this.props.location.state.artistName;\n\n    if (artist) {\n      this.setState({\n        artistName: artist\n      });\n      this.getSetlists();\n    }\n  } // componentDidUpdate(){\n  // }\n\n\n  getSetlists() {\n    let setlists = null;\n    this.setState({\n      loading: true\n    });\n    fetch('/api/getSetlists/' + this.state.artistName + '/' + this.state.nextPageNum).then(response => {\n      setlists = response.json().then(response => {\n        this.setState({\n          pageResults: response.setlist,\n          loading: false,\n          nextPageNum: this.state.nextPageNum += 1\n        });\n      });\n    }).catch(error => {\n      this.setState({\n        loading: false\n      });\n      console.log(error);\n    });\n  }\n\n  render() {\n    let results = null;\n\n    if (this.state.loading) {\n      results = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 27\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"setlists-section\",\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 1\n      }\n    }, results);\n  }\n\n}\n\nexport default withRouter(Setlists);","map":{"version":3,"sources":["/Users/kevinholt/Documents/CS50/projects/re-set/client/src/containers/Setlists/Setlists.js"],"names":["React","Component","Container","Row","Col","SetlistResult","withRouter","Spinner","Setlists","constructor","state","artistName","loading","pageResults","nextPageNum","componentDidMount","artist","props","location","setState","getSetlists","setlists","fetch","then","response","json","setlist","catch","error","console","log","render","results"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAO,kCAAP;AACA,OAAOC,OAAP,MAAoB,+BAApB;;AAEA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAC1BQ,EAAAA,WAAW,GAAE;AACJ;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,OAAO,EAAE,KAFA;AAGTC,MAAAA,WAAW,EAAE,IAHJ;AAITC,MAAAA,WAAW,EAAE;AAJJ,KAAb;AAKN;;AAEFC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBR,KAApB,CAA0BC,UAAvC;;AACA,QAAGK,MAAH,EAAU;AACN,WAAKG,QAAL,CAAc;AAACR,QAAAA,UAAU,EAAEK;AAAb,OAAd;AACA,WAAKI,WAAL;AACH;AACJ,GAhBwB,CAkBzB;AAEA;;;AAEAA,EAAAA,WAAW,GAAE;AACT,QAAIC,QAAQ,GAAG,IAAf;AACA,SAAKF,QAAL,CAAc;AAACP,MAAAA,OAAO,EAAE;AAAV,KAAd;AACIU,IAAAA,KAAK,CAAC,sBAAsB,KAAKZ,KAAL,CAAWC,UAAjC,GAA8C,GAA9C,GAAoD,KAAKD,KAAL,CAAWI,WAAhE,CAAL,CACCS,IADD,CACOC,QAAQ,IAAI;AACfH,MAAAA,QAAQ,GAAGG,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAuBC,QAAD,IAAa;AAC1C,aAAKL,QAAL,CAAc;AAACN,UAAAA,WAAW,EAAEW,QAAQ,CAACE,OAAvB;AAAgCd,UAAAA,OAAO,EAAE,KAAzC;AAAgDE,UAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWI,WAAX,IAA0B;AAAvF,SAAd;AACH,OAFU,CAAX;AAGH,KALD,EAMCa,KAND,CAMQC,KAAK,IAAI;AACb,WAAKT,QAAL,CAAc;AAACP,QAAAA,OAAO,EAAE;AAAV,OAAd;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KATD;AAUP;;AAEDG,EAAAA,MAAM,GAAI;AACN,QAAIC,OAAO,GAAG,IAAd;;AACA,QAAG,KAAKtB,KAAL,CAAWE,OAAd,EAAsB;AAClBoB,MAAAA,OAAO,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACH;;AACL,wBAER,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAG,kBAAvB;AAA0C,MAAA,KAAK,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACSA,OADT,CAFQ;AAMC;;AAhDwB;;AAmDjC,eAAe1B,UAAU,CAACE,QAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport SetlistResult from 'components/SetlistResult/SetlistResult';\nimport { withRouter } from \"react-router\";\nimport 'containers/Setlists/Setlists.css';\nimport Spinner from 'components/UI/Spinner/Spinner';\n\nclass Setlists extends Component {\n       constructor(){\n                super();\n                this.state = {\n                    artistName: '',\n                    loading: false,\n                    pageResults: null,\n                    nextPageNum: 1\n        }} \n\n        componentDidMount() {  \n            let artist = this.props.location.state.artistName;\n            if(artist){\n                this.setState({artistName: artist});\n                this.getSetlists();\n            }\n        }\n\n        // componentDidUpdate(){\n\n        // }\n\n        getSetlists(){\n            let setlists = null;\n            this.setState({loading: true});\n                fetch('/api/getSetlists/' + this.state.artistName + '/' + this.state.nextPageNum)\n                .then((response => {\n                    setlists = response.json().then(((response)=> {\n                        this.setState({pageResults: response.setlist, loading: false, nextPageNum: this.state.nextPageNum += 1 })\n                    }))\n                }))\n                .catch((error => {\n                    this.setState({loading: false});\n                    console.log(error);\n                }))\n        }\n        \n        render () {\n            let results = null;\n            if(this.state.loading){\n                results = <Spinner />\n            }\n        return(\n\n<Container className = \"setlists-section\" fluid>\n        {results}\n</Container>\n                )       \n        }\n    }\n    \nexport default withRouter(Setlists);"]},"metadata":{},"sourceType":"module"}