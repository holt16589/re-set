{"ast":null,"code":"var _jsxFileName = \"/Users/kevinholt/Documents/CS50/projects/re-set/client/src/containers/Setlists/Setlists.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { withRouter } from \"react-router\";\nimport 'containers/Setlists/Setlists.css';\nimport Spinner from 'components/UI/Spinner/Spinner';\n\nclass Setlists extends Component {\n  constructor() {\n    super();\n    this.state = {\n      artistName: '',\n      loading: false,\n      pageResults: null,\n      curPageNum: null\n    };\n  }\n\n  componentDidMount() {\n    let artist = this.props.location.state.artistName;\n    let setlists = null;\n\n    if (artist) {\n      this.setState({\n        artistName: artist,\n        loading: true\n      });\n      fetch('/api/getSetlists/' + artist + '/1').then(response => {\n        setlists = response.json().then(() => {\n          console.log(setlists);\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    let results = null;\n\n    if (this.state.loading) {\n      results = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 27\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"setlists-section\",\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 1\n      }\n    }, results);\n  }\n\n}\n\nexport default withRouter(Setlists);","map":{"version":3,"sources":["/Users/kevinholt/Documents/CS50/projects/re-set/client/src/containers/Setlists/Setlists.js"],"names":["React","Component","Container","Row","Col","withRouter","Spinner","Setlists","constructor","state","artistName","loading","pageResults","curPageNum","componentDidMount","artist","props","location","setlists","setState","fetch","then","response","json","console","log","catch","error","render","results"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAO,kCAAP;AACA,OAAOC,OAAP,MAAoB,+BAApB;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC1BO,EAAAA,WAAW,GAAE;AACJ;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,OAAO,EAAE,KAFA;AAGTC,MAAAA,WAAW,EAAE,IAHJ;AAITC,MAAAA,UAAU,EAAE;AAJH,KAAb;AAKN;;AAEFC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBR,KAApB,CAA0BC,UAAvC;AACA,QAAIQ,QAAQ,GAAG,IAAf;;AACA,QAAGH,MAAH,EAAU;AACN,WAAKI,QAAL,CAAc;AAACT,QAAAA,UAAU,EAAEK,MAAb;AAAqBJ,QAAAA,OAAO,EAAE;AAA9B,OAAd;AACAS,MAAAA,KAAK,CAAC,sBAAsBL,MAAtB,GAA+B,IAAhC,CAAL,CACCM,IADD,CACOC,QAAQ,IAAI;AACfJ,QAAAA,QAAQ,GAAGI,QAAQ,CAACC,IAAT,GAAiBF,IAAjB,CAAuB,MAAK;AACnCG,UAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACH,SAFU,CAAX;AAGH,OALD,EAMCQ,KAND,CAMQC,KAAK,IAAI;AACbH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,OARD;AASH;AACJ;;AAEDC,EAAAA,MAAM,GAAI;AACN,QAAIC,OAAO,GAAG,IAAd;;AACA,QAAG,KAAKpB,KAAL,CAAWE,OAAd,EAAsB;AAClBkB,MAAAA,OAAO,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACH;;AACL,wBAER,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAG,kBAAvB;AAA0C,MAAA,KAAK,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACSA,OADT,CAFQ;AAMC;;AAtCwB;;AAyCjC,eAAexB,UAAU,CAACE,QAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { withRouter } from \"react-router\";\nimport 'containers/Setlists/Setlists.css';\nimport Spinner from 'components/UI/Spinner/Spinner';\n\nclass Setlists extends Component {\n       constructor(){\n                super();\n                this.state = {\n                    artistName: '',\n                    loading: false,\n                    pageResults: null,\n                    curPageNum: null\n        }} \n\n        componentDidMount() {  \n            let artist = this.props.location.state.artistName;\n            let setlists = null;\n            if(artist){\n                this.setState({artistName: artist, loading: true});\n                fetch('/api/getSetlists/' + artist + '/1')\n                .then((response => {\n                    setlists = response.json() .then((()=> {\n                        console.log(setlists)\n                    }))\n                }))\n                .catch((error => {\n                    console.log(error);\n                }))\n            }\n        }\n        \n        render () {\n            let results = null;\n            if(this.state.loading){\n                results = <Spinner />\n            }\n        return(\n\n<Container className = \"setlists-section\" fluid>\n        {results}\n</Container>\n                )       \n        }\n    }\n    \nexport default withRouter(Setlists);"]},"metadata":{},"sourceType":"module"}