{"ast":null,"code":"require('isomorphic-fetch');\n\nconst queryString = require('query-string');\n/*\nThe MIT License (MIT)\n\nCopyright (c) 2017 Johannes Terh√ºrne <johannes@terhuerne.org>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n// Static Variables\n\n\nvar version = \"1.0\";\nvar baseUrl = \"https://api.setlist.fm/rest/\";\nvar paths = {\n  getArtist: \"/artist/%s\",\n  getArtistSetlists: \"/artist/%s/setlists\",\n  getCity: \"/city/%s\",\n  searchArtists: \"/search/artists\",\n  searchCities: \"/search/cities\",\n  searchCountries: \"/search/countries\",\n  searchSetlists: \"/search/setlists\",\n  searchVenues: \"/search/venues\",\n  getSetlistByVersion: \"/setlist/version/%s\",\n  getSetlist: \"/setlist/%s\",\n  getUser: \"/user/%s\",\n  getUserAttended: \"/user/%s/attended\",\n  getUserEdited: \"/user/%s/edited\",\n  getVenue: \"/venue/%s\",\n  getVenueSetlists: \"/venue/%s/setlists\"\n};\nvar languages = [\"en\", \"es\", \"fr\", \"de\", \"pt\", \"tr\", \"it\", \"pl\"];\n\nvar SetlistFmApi = function (config) {\n  // Public Variables\n  this.key = false;\n  this.format = \"application/json\";\n  this.language = \"en\"; // Helper to access Global-Variables\n\n  var self = this; // Public Functions\n\n  this.getArtist = function (mbid) {\n    return new Promise(function (resolve, reject) {\n      if (self.key) {\n        if (typeof mbid !== \"undefined\" && mbid) {\n          requestApi(buildUrl(paths.getArtist, mbid), null).then(function (artist) {\n            resolve(artist);\n          }).catch(function (error) {\n            reject(error);\n          });\n        } else {\n          reject(\"setlist.fm API Error: You need to define a 'mbid' to request API.\");\n        }\n      } else {\n        reject(\"SetlistFM API Error: You have to set an application key to request API.\");\n      }\n    });\n  };\n\n  this.getArtistSetlists = function (mbid, query) {\n    return new Promise(function (resolve, reject) {\n      if (self.key) {\n        if (typeof mbid !== \"undefined\" && mbid) {\n          if (typeof query === \"object\" || typeof query === \"undefined\") {\n            requestApi(buildUrl(paths.getArtistSetlists, mbid), query).then(function (setlists) {\n              resolve(setlists);\n            }).catch(function (error) {\n              reject(error);\n            });\n          } else {\n            reject(\"setlist.fm API Error: 'query' must be an object to request API.\");\n          }\n        } else {\n          reject(\"setlist.fm API Error: You need to define a 'mbid' to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  };\n\n  this.getCity = function (geoId) {\n    return new Promise(function (resolve, reject) {\n      if (self.key) {\n        if (typeof geoId !== \"undefined\" && geoId) {\n          requestApi(buildUrl(paths.getCity, geoId), null).then(function (city) {\n            resolve(city);\n          }).catch(function (error) {\n            reject(error);\n          });\n        } else {\n          reject(\"setlist.fm API Error: You need to define a 'geoId' to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  };\n\n  this.searchArtists = function (query) {\n    return new Promise(function (resolve, reject) {\n      if (self.key) {\n        if (query !== null && typeof query === \"object\") {\n          requestApi(buildUrl(paths.searchArtists, null), query).then(function (results) {\n            resolve(results);\n          }).catch(function (error) {\n            reject(error);\n          });\n        } else {\n          reject(\"setlist.fm API Error: 'query' must be an object to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  };\n\n  this.searchCities = function (query) {\n    return new Promise(function (resolve, reject) {\n      if (self.key) {\n        if (query !== null && typeof query === \"object\") {\n          requestApi(buildUrl(paths.searchCities, null), query).then(function (results) {\n            resolve(results);\n          }).catch(function (error) {\n            reject(error);\n          });\n        } else {\n          reject(\"setlist.fm API Error: 'query' must be an object to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  };\n\n  this.searchCountries = function () {\n    return new Promise(function (resolve, reject) {\n      if (self.key) {\n        requestApi(buildUrl(paths.searchCountries, null), null).then(function (results) {\n          resolve(results);\n        }).catch(function (error) {\n          reject(error);\n        });\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  };\n\n  this.searchSetlists = function (query) {\n    return new Promise(function (resolve, reject) {\n      if (self.key) {\n        if (query !== null && typeof query === \"object\") {\n          requestApi(buildUrl(paths.searchSetlists, null), query).then(function (results) {\n            resolve(results);\n          }).catch(function (error) {\n            reject(error);\n          });\n        } else {\n          reject(\"setlist.fm API Error: 'query' must be an object to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  };\n\n  this.searchVenues = function (query) {\n    return new Promise(function (resolve, reject) {\n      if (self.key) {\n        if (query !== null && typeof query === \"object\") {\n          requestApi(buildUrl(paths.searchVenues, null), query).then(function (results) {\n            resolve(results);\n          }).catch(function (error) {\n            reject(error);\n          });\n        } else {\n          reject(\"setlist.fm API Error: 'query' must be an object to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  };\n\n  this.getSetlistByVersion = function (versionId) {\n    return new Promise(function (resolve, reject) {\n      if (self.key) {\n        if (typeof versionId !== \"undefined\" && versionId) {\n          requestApi(buildUrl(paths.getSetlistByVersion, versionId), null).then(function (setlist) {\n            resolve(setlist);\n          }).catch(function (error) {\n            reject(error);\n          });\n        } else {\n          reject(\"setlist.fm API Error: You need to define a 'versionId' to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  };\n\n  this.getSetlist = function (setlistId) {\n    return new Promise(function (resolve, reject) {\n      if (self.key) {\n        if (typeof setlistId !== \"undefined\" && setlistId) {\n          requestApi(buildUrl(paths.getSetlist, setlistId), null).then(function (setlist) {\n            resolve(setlist);\n          }).catch(function (error) {\n            reject(error);\n          });\n        } else {\n          reject(\"setlist.fm API Error: You need to define a 'setlistId' to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  };\n\n  this.getUser = function (userId) {\n    return new Promise(function (resolve, reject) {\n      if (self.key) {\n        if (typeof userId !== \"undefined\" && userId) {\n          requestApi(buildUrl(paths.getUser, userId), null).then(function (user) {\n            resolve(user);\n          }).catch(function (error) {\n            reject(error);\n          });\n        } else {\n          reject(\"setlist.fm API Error: You need to define a 'userId' to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  };\n\n  this.getUserAttended = function (userId, query) {\n    return new Promise(function (resolve, reject) {\n      if (self.key) {\n        if (typeof userId !== \"undefined\" && userId) {\n          if (typeof query === \"object\" || typeof query === \"undefined\") {\n            requestApi(buildUrl(paths.getUserAttended, userId), query).then(function (concerts) {\n              resolve(concerts);\n            }).catch(function (error) {\n              reject(error);\n            });\n          } else {\n            reject(\"setlist.fm API Error: 'query' must be an object to request API.\");\n          }\n        } else {\n          reject(\"setlist.fm API Error: You need to define a 'userId' to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  };\n\n  this.getUserEdited = function (userId, query) {\n    return new Promise(function (resolve, reject) {\n      if (self.key) {\n        if (typeof userId !== \"undefined\" && userId) {\n          if (typeof query === \"object\" || typeof query === \"undefined\") {\n            requestApi(buildUrl(paths.getUserEdited, userId), query).then(function (edits) {\n              resolve(edits);\n            }).catch(function (error) {\n              reject(error);\n            });\n          } else {\n            reject(\"setlist.fm API Error: 'query' must be an object to request API.\");\n          }\n        } else {\n          reject(\"setlist.fm API Error: You need to define a 'userId' to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  };\n\n  this.getVenue = function (venueId) {\n    return new Promise(function (resolve, reject) {\n      if (self.key) {\n        if (typeof venueId !== \"undefined\" && venueId) {\n          requestApi(buildUrl(paths.getVenue, venueId), null).then(function (venue) {\n            resolve(venue);\n          }).catch(function (error) {\n            reject(error);\n          });\n        } else {\n          reject(\"setlist.fm API Error: You need to define a 'venueId' to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  };\n\n  this.getVenueSetlists = function (venueId, query) {\n    return new Promise(function (resolve, reject) {\n      if (self.key) {\n        if (typeof venueId !== \"undefined\" && venueId) {\n          if (typeof query === \"object\" || typeof query === \"undefined\") {\n            requestApi(buildUrl(paths.getVenueSetlists, venueId), query).then(function (setlists) {\n              resolve(setlists);\n            }).catch(function (error) {\n              reject(error);\n            });\n          } else {\n            reject(\"setlist.fm API Error: 'query' must be an object to request API.\");\n          }\n        } else {\n          reject(\"setlist.fm API Error: You need to define a 'venueId' to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  }; // Private functions\n\n\n  function buildUrl(endpoint, variable) {\n    return baseUrl + version + endpoint.replace(\"%s\", variable);\n  }\n\n  function requestApi(endpoint, variables) {\n    const qs = queryString.stringify(variables);\n    const url = endpoint + \"?\" + qs;\n    return fetch(url, {\n      headers: {\n        Accept: self.format,\n        \"Accept-Language\": self.language,\n        \"x-api-key\": self.key\n      }\n    }).then(function (response) {\n      var contentType = response.headers.get(\"content-type\");\n\n      if (contentType && contentType.includes(\"application/json\")) {\n        return response.json();\n      }\n\n      return response;\n    }).catch(function (error) {\n      console.error(\"setlist.fm API Error: Could not reach API.\");\n    });\n  } // Constructor Actions\n\n\n  if (typeof config !== \"undefined\" && typeof config.key !== \"undefined\") {\n    self.key = config.key;\n  }\n\n  if (typeof config !== \"undefined\" && typeof config.format !== \"undefined\") {\n    if (config.format == \"json\") {\n      self.format = \"application/json\";\n    } else if (config.format == \"xml\") {\n      self.format = \"application/xml\";\n    }\n  }\n\n  if (typeof config !== \"undefined\" && typeof config.language !== \"undefined\") {\n    if (languages.includes(config.language)) {\n      self.language = config.language;\n    }\n  }\n}; // Export Class\n\n\nmodule.exports = SetlistFmApi;","map":{"version":3,"sources":["/Users/kevinholt/Documents/CS50/projects/re-set/client/node_modules/setlistfm-js/lib/setlistfm.js"],"names":["require","queryString","version","baseUrl","paths","getArtist","getArtistSetlists","getCity","searchArtists","searchCities","searchCountries","searchSetlists","searchVenues","getSetlistByVersion","getSetlist","getUser","getUserAttended","getUserEdited","getVenue","getVenueSetlists","languages","SetlistFmApi","config","key","format","language","self","mbid","Promise","resolve","reject","requestApi","buildUrl","then","artist","catch","error","query","setlists","geoId","city","results","versionId","setlist","setlistId","userId","user","concerts","edits","venueId","venue","endpoint","variable","replace","variables","qs","stringify","url","fetch","headers","Accept","response","contentType","get","includes","json","console","module","exports"],"mappings":"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","sourcesContent":["require('isomorphic-fetch');\nconst queryString = require('query-string');\n\n/*\nThe MIT License (MIT)\n\nCopyright (c) 2017 Johannes Terh√ºrne <johannes@terhuerne.org>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\n// Static Variables\nvar version = \"1.0\";\nvar baseUrl = \"https://api.setlist.fm/rest/\";\nvar paths = {\n  getArtist: \"/artist/%s\",\n  getArtistSetlists: \"/artist/%s/setlists\",\n  getCity: \"/city/%s\",\n  searchArtists: \"/search/artists\",\n  searchCities: \"/search/cities\",\n  searchCountries: \"/search/countries\",\n  searchSetlists: \"/search/setlists\",\n  searchVenues: \"/search/venues\",\n  getSetlistByVersion: \"/setlist/version/%s\",\n  getSetlist: \"/setlist/%s\",\n  getUser: \"/user/%s\",\n  getUserAttended: \"/user/%s/attended\",\n  getUserEdited: \"/user/%s/edited\",\n  getVenue: \"/venue/%s\",\n  getVenueSetlists: \"/venue/%s/setlists\"\n};\nvar languages = [\"en\", \"es\", \"fr\", \"de\", \"pt\", \"tr\", \"it\", \"pl\"];\n\nvar SetlistFmApi = function(config) {\n\n  // Public Variables\n  this.key = false;\n  this.format = \"application/json\";\n  this.language = \"en\";\n\n  // Helper to access Global-Variables\n  var self = this;\n\n  // Public Functions\n  this.getArtist = function(mbid) {\n    return new Promise(function(resolve, reject) {\n      if (self.key) {\n        if (typeof mbid !== \"undefined\" && mbid) {\n          requestApi(buildUrl(paths.getArtist, mbid), null)\n            .then(function(artist) {\n              resolve(artist);\n            })\n            .catch(function(error) {\n              reject(error);\n            })\n        } else {\n          reject(\"setlist.fm API Error: You need to define a 'mbid' to request API.\");\n        }\n      } else {\n        reject(\"SetlistFM API Error: You have to set an application key to request API.\");\n      }\n    });\n  }\n\n  this.getArtistSetlists = function(mbid, query) {\n    return new Promise(function(resolve, reject) {\n      if (self.key) {\n        if (typeof mbid !== \"undefined\" && mbid) {\n          if (typeof query === \"object\" || typeof query === \"undefined\") {\n            requestApi(buildUrl(paths.getArtistSetlists, mbid), query)\n              .then(function(setlists) {\n                resolve(setlists);\n              })\n              .catch(function(error) {\n                reject(error);\n              });\n          } else {\n            reject(\"setlist.fm API Error: 'query' must be an object to request API.\");\n          }\n        } else {\n          reject(\"setlist.fm API Error: You need to define a 'mbid' to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  }\n\n  this.getCity = function(geoId) {\n    return new Promise(function(resolve, reject) {\n      if (self.key) {\n        if (typeof geoId !== \"undefined\" && geoId) {\n          requestApi(buildUrl(paths.getCity, geoId), null)\n            .then(function(city) {\n              resolve(city);\n            })\n            .catch(function(error) {\n              reject(error);\n            })\n        } else {\n          reject(\"setlist.fm API Error: You need to define a 'geoId' to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  }\n\n  this.searchArtists = function(query) {\n    return new Promise(function(resolve, reject) {\n      if (self.key) {\n        if (query !== null && typeof query === \"object\") {\n          requestApi(buildUrl(paths.searchArtists, null), query)\n            .then(function(results) {\n              resolve(results);\n            })\n            .catch(function(error) {\n              reject(error);\n            });\n        } else {\n          reject(\"setlist.fm API Error: 'query' must be an object to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  }\n\n  this.searchCities = function(query) {\n    return new Promise(function(resolve, reject) {\n      if (self.key) {\n        if (query !== null && typeof query === \"object\") {\n          requestApi(buildUrl(paths.searchCities, null), query)\n            .then(function(results) {\n              resolve(results);\n            })\n            .catch(function(error) {\n              reject(error);\n            });\n        } else {\n          reject(\"setlist.fm API Error: 'query' must be an object to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  }\n\n  this.searchCountries = function() {\n    return new Promise(function(resolve, reject) {\n      if (self.key) {\n        requestApi(buildUrl(paths.searchCountries, null), null)\n          .then(function(results) {\n            resolve(results);\n          })\n          .catch(function(error) {\n            reject(error);\n          });\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  }\n\n  this.searchSetlists = function(query) {\n    return new Promise(function(resolve, reject) {\n      if (self.key) {\n        if (query !== null && typeof query === \"object\") {\n          requestApi(buildUrl(paths.searchSetlists, null), query)\n            .then(function(results) {\n              resolve(results);\n            })\n            .catch(function(error) {\n              reject(error);\n            });\n        } else {\n          reject(\"setlist.fm API Error: 'query' must be an object to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  }\n\n  this.searchVenues = function(query) {\n    return new Promise(function(resolve, reject) {\n      if (self.key) {\n        if (query !== null && typeof query === \"object\") {\n          requestApi(buildUrl(paths.searchVenues, null), query)\n            .then(function(results) {\n              resolve(results);\n            })\n            .catch(function(error) {\n              reject(error);\n            });\n        } else {\n          reject(\"setlist.fm API Error: 'query' must be an object to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  }\n\n  this.getSetlistByVersion = function(versionId) {\n    return new Promise(function(resolve, reject) {\n      if (self.key) {\n        if (typeof versionId !== \"undefined\" && versionId) {\n          requestApi(buildUrl(paths.getSetlistByVersion, versionId), null)\n            .then(function(setlist) {\n              resolve(setlist);\n            })\n            .catch(function(error) {\n              reject(error);\n            })\n        } else {\n          reject(\"setlist.fm API Error: You need to define a 'versionId' to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  }\n\n  this.getSetlist = function(setlistId) {\n    return new Promise(function(resolve, reject) {\n      if (self.key) {\n        if (typeof setlistId !== \"undefined\" && setlistId) {\n          requestApi(buildUrl(paths.getSetlist, setlistId), null)\n            .then(function(setlist) {\n              resolve(setlist);\n            })\n            .catch(function(error) {\n              reject(error);\n            })\n        } else {\n          reject(\"setlist.fm API Error: You need to define a 'setlistId' to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  }\n\n  this.getUser = function(userId) {\n    return new Promise(function(resolve, reject) {\n      if (self.key) {\n        if (typeof userId !== \"undefined\" && userId) {\n          requestApi(buildUrl(paths.getUser, userId), null)\n            .then(function(user) {\n              resolve(user);\n            })\n            .catch(function(error) {\n              reject(error);\n            })\n        } else {\n          reject(\"setlist.fm API Error: You need to define a 'userId' to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  }\n\n  this.getUserAttended = function(userId, query) {\n    return new Promise(function(resolve, reject) {\n      if (self.key) {\n        if (typeof userId !== \"undefined\" && userId) {\n          if (typeof query === \"object\" || typeof query === \"undefined\") {\n            requestApi(buildUrl(paths.getUserAttended, userId), query)\n              .then(function(concerts) {\n                resolve(concerts);\n              })\n              .catch(function(error) {\n                reject(error);\n              });\n          } else {\n            reject(\"setlist.fm API Error: 'query' must be an object to request API.\");\n          }\n        } else {\n          reject(\"setlist.fm API Error: You need to define a 'userId' to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  }\n\n  this.getUserEdited = function(userId, query) {\n    return new Promise(function(resolve, reject) {\n      if (self.key) {\n        if (typeof userId !== \"undefined\" && userId) {\n          if (typeof query === \"object\" || typeof query === \"undefined\") {\n            requestApi(buildUrl(paths.getUserEdited, userId), query)\n              .then(function(edits) {\n                resolve(edits);\n              })\n              .catch(function(error) {\n                reject(error);\n              });\n          } else {\n            reject(\"setlist.fm API Error: 'query' must be an object to request API.\");\n          }\n        } else {\n          reject(\"setlist.fm API Error: You need to define a 'userId' to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  }\n\n  this.getVenue = function(venueId) {\n    return new Promise(function(resolve, reject) {\n      if (self.key) {\n        if (typeof venueId !== \"undefined\" && venueId) {\n          requestApi(buildUrl(paths.getVenue, venueId), null)\n            .then(function(venue) {\n              resolve(venue);\n            })\n            .catch(function(error) {\n              reject(error);\n            })\n        } else {\n          reject(\"setlist.fm API Error: You need to define a 'venueId' to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  }\n\n  this.getVenueSetlists = function(venueId, query) {\n    return new Promise(function(resolve, reject) {\n      if (self.key) {\n        if (typeof venueId !== \"undefined\" && venueId) {\n          if (typeof query === \"object\" || typeof query === \"undefined\") {\n            requestApi(buildUrl(paths.getVenueSetlists, venueId), query)\n              .then(function(setlists) {\n                resolve(setlists);\n              })\n              .catch(function(error) {\n                reject(error);\n              });\n          } else {\n            reject(\"setlist.fm API Error: 'query' must be an object to request API.\");\n          }\n        } else {\n          reject(\"setlist.fm API Error: You need to define a 'venueId' to request API.\");\n        }\n      } else {\n        reject(\"setlist.fm API Error: You have to set an application key to request API.\");\n      }\n    });\n  }\n\n  // Private functions\n  function buildUrl(endpoint, variable) {\n    return baseUrl + version + endpoint.replace(\"%s\", variable);\n  }\n\n  function requestApi(endpoint, variables) {\n    const qs = queryString.stringify(variables);\n    const url = endpoint + \"?\" + qs;\n    return fetch(url, {\n            headers: {\n                Accept: self.format,\n                \"Accept-Language\": self.language,\n                \"x-api-key\": self.key\n            }\n        })\n        .then(function(response) {\n          var contentType = response.headers.get(\"content-type\");\n          if (contentType && contentType.includes(\"application/json\")) {\n            return response.json();\n          }\n          \n          return response;\n        })\n        .catch(function(error) {\n          console.error(\"setlist.fm API Error: Could not reach API.\");\n        });\n}\n\n  // Constructor Actions\n  if (typeof config !== \"undefined\" && typeof config.key !== \"undefined\") {\n    self.key = config.key;\n  }\n\n  if (typeof config !== \"undefined\" && typeof config.format !== \"undefined\") {\n    if (config.format == \"json\") {\n      self.format = \"application/json\";\n    } else if (config.format == \"xml\") {\n      self.format = \"application/xml\";\n    }\n  }\n\n  if (typeof config !== \"undefined\" && typeof config.language !== \"undefined\") {\n    if (languages.includes(config.language)) {\n      self.language = config.language;\n    }\n  }\n}\n\n// Export Class\nmodule.exports = SetlistFmApi;\n"]},"metadata":{},"sourceType":"script"}