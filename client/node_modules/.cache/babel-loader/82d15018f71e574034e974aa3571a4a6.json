{"ast":null,"code":"var _jsxFileName = \"/Users/kevinholt/Documents/CS50/projects/re-set/client/src/components/ViewSetlist/ViewSetlist.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport Spinner from 'components/UI/Spinner/Spinner';\nimport 'components/ViewSetlist/ViewSetlist.css';\nimport * as spotifyFunctions from 'spotifyFunctions';\n\nclass ViewSetlist extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      setObject: null,\n      loading: false,\n      error: false,\n      fmTracks: null,\n      spotify: null\n    };\n  }\n\n  componentDidMount() {\n    let spotifyTracks = [];\n    let setTracks = [];\n    let artistName = '';\n    this.setState({\n      loading: true\n    });\n    fetch('/api/getSetlist/' + this.props.match.params.id).then(response => {\n      response.json().then(response => {\n        artistName = response.artist.name;\n        this.setState({\n          setObject: response\n        });\n        console.log(response);\n        Object.entries(response.sets.set).forEach(set => {\n          set[1].song.forEach(song => {\n            setTracks.push(song.name);\n            console.log(song.name);\n            spotifyTracks.push(spotifyFunctions.searchForSong(artistName, song.name));\n            Promise.all(spotifyTracks).then(data => {\n              console.log(data);\n              this.setState({\n                fmTracks: setTracks,\n                spotify: data\n              });\n            });\n          });\n        });\n      }).then(() => {\n        this.setState({\n          loading: false\n        });\n      });\n    }).catch(error => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n      console.log(error);\n    });\n  }\n\n  render() {\n    let displaySetlist = null;\n    let tracklist = null;\n    let setSize = 0;\n    let availableSet = 0;\n\n    if (this.state.loading) {\n      displaySetlist = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 26\n        }\n      });\n    }\n\n    if (this.state.setObject) {\n      if (this.state.fmTracks && this.state.spotify) {\n        tracklist = /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"songList\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 23\n          }\n        }, this.state.fmTracks.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }\n        }, index + 1, \". \", item)));\n      }\n\n      displaySetlist = /*#__PURE__*/React.createElement(Container, {\n        className: \"setContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"setTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"titleStyle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, this.state.setObject.artist.name, \" at \", this.state.setObject.venue.name, \", \", this.state.setObject.eventDate))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 6,\n        className: \"set-overview\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"https://i.scdn.co/image/5ea794cf832550943d5f8122afcf5f23ee9d85b7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 6\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 6,\n        className: \"set-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }, tracklist)));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, displaySetlist);\n  }\n\n}\n\nexport default withRouter(ViewSetlist);","map":{"version":3,"sources":["/Users/kevinholt/Documents/CS50/projects/re-set/client/src/components/ViewSetlist/ViewSetlist.js"],"names":["React","Component","withRouter","Container","Col","Row","Spinner","spotifyFunctions","ViewSetlist","constructor","props","state","setObject","loading","error","fmTracks","spotify","componentDidMount","spotifyTracks","setTracks","artistName","setState","fetch","match","params","id","then","response","json","artist","name","console","log","Object","entries","sets","set","forEach","song","push","searchForSong","Promise","all","data","catch","render","displaySetlist","tracklist","setSize","availableSet","map","item","index","venue","eventDate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport Spinner from 'components/UI/Spinner/Spinner';\nimport 'components/ViewSetlist/ViewSetlist.css';\nimport * as spotifyFunctions from 'spotifyFunctions';\n\nclass ViewSetlist extends Component {\n    constructor(props) {\n      super();\n      this.state = {\n        setObject: null,\n        loading: false,\n        error: false,\n        fmTracks: null,\n        spotify: null\n}}\n\ncomponentDidMount(){\n  let spotifyTracks = [];\n  let setTracks = [];\n  let artistName = '';\n            this.setState({loading: true});\n                fetch('/api/getSetlist/' + this.props.match.params.id)\n                .then((response => {\n                    response.json().then(((response)=> {\n                        artistName = response.artist.name;\n                        this.setState({setObject: response});\n                        console.log(response);\n                        Object.entries(response.sets.set).forEach(\n                          (set)=>{\n                            set[1].song.forEach(\n                              (song)=>{\n                                setTracks.push(song.name);\n                                console.log(song.name);\n                                spotifyTracks.push(spotifyFunctions.searchForSong(artistName, song.name));\n                                Promise.all(spotifyTracks).then((data)=>{\n                                   console.log(data);\n                                   this.setState({fmTracks: setTracks, spotify: data})\n                                })\n                              }\n                            )\n                          }\n                        )\n                      \n                    }))\n                    .then(\n                      () =>{\n                        this.setState({loading: false})\n                      }\n                    )\n                }))\n                .catch((error => {\n                    this.setState({loading: false, error: true});\n                    console.log(error);\n                }))\n}\n\n    render() {\n      let displaySetlist = null;\n      let tracklist = null;\n      let setSize = 0;\n      let availableSet = 0;\n\n      if(this.state.loading){\n        displaySetlist = <Spinner />\n      }\n\n      if(this.state.setObject){\n\n        if(this.state.fmTracks && this.state.spotify){\n          tracklist = <ul className=\"songList\">\n          {\n            this.state.fmTracks.map((item, index) => \n            <li>{index + 1}. {item}</li>\n            )\n          }\n      </ul>;\n        }\n\n        displaySetlist = <Container className=\"setContainer\">\n        <Row className=\"setTitle\">\n        <h2><span className=\"titleStyle\">{this.state.setObject.artist.name} at {this.state.setObject.venue.name}, {this.state.setObject.eventDate}</span></h2>\n        </Row>\n        <Row>\n      <Col sm={12} md={6} className=\"set-overview\">\n     <img src=\"https://i.scdn.co/image/5ea794cf832550943d5f8122afcf5f23ee9d85b7\"/>\n     </Col>\n      <Col sm={12} md={6} className =\"set-details\">\n      {tracklist}\n  </Col>\n  </Row>\n    </Container>;\n      }\n      \n\n      return (\n        <React.Fragment>\n          {displaySetlist}\n          </React.Fragment>\n      );\n    }\n  }\n\nexport default withRouter(ViewSetlist);"]},"metadata":{},"sourceType":"module"}