{"ast":null,"code":"var _jsxFileName = \"/Users/kevinholt/Documents/CS50/projects/re-set/client/src/containers/Setlists/Setlists.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { withRouter } from \"react-router\";\nimport 'containers/Setlists/Setlists.css';\nimport Spinner from 'components/UI/Spinner/Spinner';\n\nclass Setlists extends Component {\n  constructor() {\n    super();\n    this.state = {\n      artistName: '',\n      loading: false\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      artistName: this.props.location.state.artistName\n    });\n  }\n\n  componentDidMount() {\n    if (this.state.artistName) {\n      this.setState({\n        loading: true\n      });\n      spotifyFunctions.searchForArtist(this.state.searchValue).then(response => {\n        let searchResult = response.artists.items;\n        this.setState({\n          loading: false,\n          result: searchResult\n        });\n      }).catch(error => {\n        this.setState({\n          loading: false\n        });\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"setlists-section\",\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 1\n      }\n    });\n  }\n\n}\n\nexport default withRouter(Setlists);","map":{"version":3,"sources":["/Users/kevinholt/Documents/CS50/projects/re-set/client/src/containers/Setlists/Setlists.js"],"names":["React","Component","Container","Row","Col","withRouter","Spinner","Setlists","constructor","state","artistName","loading","componentWillMount","setState","props","location","componentDidMount","spotifyFunctions","searchForArtist","searchValue","then","response","searchResult","artists","items","result","catch","error","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAO,kCAAP;AACA,OAAOC,OAAP,MAAoB,+BAApB;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC1BO,EAAAA,WAAW,GAAE;AACJ;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAGN;;AAEFC,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,QAAL,CAAc;AAACH,MAAAA,UAAU,EAAE,KAAKI,KAAL,CAAWC,QAAX,CAAoBN,KAApB,CAA0BC;AAAvC,KAAd;AACH;;AAEDM,EAAAA,iBAAiB,GAAG;AAChB,QAAG,KAAKP,KAAL,CAAWC,UAAd,EAAyB;AACrB,WAAKG,QAAL,CAAc;AAACF,QAAAA,OAAO,EAAE;AAAV,OAAd;AACAM,MAAAA,gBAAgB,CAACC,eAAjB,CAAiC,KAAKT,KAAL,CAAWU,WAA5C,EACDC,IADC,CACKC,QAAQ,IAAI;AACjB,YAAIC,YAAY,GAAGD,QAAQ,CAACE,OAAT,CAAiBC,KAApC;AACA,aAAKX,QAAL,CAAc;AAACF,UAAAA,OAAO,EAAE,KAAV;AAAiBc,UAAAA,MAAM,EAAEH;AAAzB,SAAd;AACD,OAJC,EAKDI,KALC,CAKMC,KAAK,IAAI;AACf,aAAKd,QAAL,CAAc;AAACF,UAAAA,OAAO,EAAE;AAAV,SAAd;AACAiB,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OARC;AASC;AACR;;AAEDG,EAAAA,MAAM,GAAI;AAEV,wBAER,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAG,kBAAvB;AAA0C,MAAA,KAAK,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFQ;AAMC;;AAnCwB;;AAsCjC,eAAezB,UAAU,CAACE,QAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { withRouter } from \"react-router\";\nimport 'containers/Setlists/Setlists.css';\nimport Spinner from 'components/UI/Spinner/Spinner';\n\nclass Setlists extends Component {\n       constructor(){\n                super();\n                this.state = {\n                    artistName: '',\n                    loading: false\n        }} \n\n        componentWillMount() {\n            this.setState({artistName: this.props.location.state.artistName});\n        }\n\n        componentDidMount() {\n            if(this.state.artistName){\n                this.setState({loading: true});\n                spotifyFunctions.searchForArtist(this.state.searchValue)\n              .then((response => {\n                let searchResult = response.artists.items;\n                this.setState({loading: false, result: searchResult});\n              }))   \n              .catch((error => {\n                this.setState({loading: false});\n                console.log(error);\n              }));\n                }\n        }\n        \n        render () {\n                \n        return(\n\n<Container className = \"setlists-section\" fluid>\n        \n</Container>\n                )       \n        }\n    }\n    \nexport default withRouter(Setlists);"]},"metadata":{},"sourceType":"module"}