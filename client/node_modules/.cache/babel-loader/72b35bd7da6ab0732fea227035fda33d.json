{"ast":null,"code":"var _jsxFileName = \"/Users/kevinholt/Documents/CS50/projects/re-set/client/src/components/SetlistResult/SetlistResult.js\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport 'components/SetlistResult/SetlistResult.css';\n\nconst setlistResult = props => {\n  let styleClass = \"setlistResult\";\n  let locationString = 'Unknown';\n  let setMonth = '';\n  let setDay = '';\n  let setYear = ''; //build string to display set location with Venue, City, State and Country\n\n  if (props.venueName || props.cityName || props.countryName) {\n    locationString = props.venueName;\n\n    if (props.cityName) {\n      locationString = locationString.concat(', ', props.cityName);\n    }\n\n    if (props.countryName) {\n      locationString = locationString.concat(', ', props.countryName);\n    }\n  }\n\n  if (props.setDate) {\n    //parse the setlist date to display\n    let splitDate = props.setDate.split(\"-\");\n    setDay = splitDate[0];\n    let rawMonth = splitDate[1];\n    setYear = splitDate[2];\n\n    switch (rawMonth) {\n      case \"01\":\n        setMonth = \"JAN\";\n        break;\n\n      case \"02\":\n        setMonth = \"FEB\";\n        break;\n\n      case \"03\":\n        setMonth = \"MAR\";\n        break;\n\n      case \"04\":\n        setMonth = \"APR\";\n        break;\n\n      case \"05\":\n        setMonth = \"MAY\";\n        break;\n\n      case \"06\":\n        setMonth = \"JUN\";\n        break;\n\n      case \"07\":\n        setMonth = \"JUL\";\n        break;\n\n      case \"08\":\n        setMonth = \"AUG\";\n        break;\n\n      case \"09\":\n        setMonth = \"SEP\";\n        break;\n\n      case \"10\":\n        setMonth = \"OCT\";\n        break;\n\n      case \"11\":\n        setMonth = \"NOV\";\n        break;\n\n      case \"12\":\n        setMonth = \"DEC\";\n        break;\n\n      default:\n        setMonth = \"UNK\";\n        break;\n    }\n  }\n\n  let isEmpty = props.setSize === 0;\n\n  if (isEmpty) {\n    styleClass = \"setlistResult emptySet\";\n  }\n\n  return /*#__PURE__*/React.createElement(Row, {\n    className: \"setRow mb-4\",\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: {\n      span: 6,\n      offset: 3\n    },\n    className: styleClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 3\n    },\n    md: {\n      span: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dateBlock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"month\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, setMonth), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"day\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, setDay), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"year\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, setYear))), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 9\n    },\n    md: {\n      span: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"artistName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, props.artistName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"venue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, locationString), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"numSongs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, props.setSize, \" songs\")))));\n};\n\nexport default setlistResult;","map":{"version":3,"sources":["/Users/kevinholt/Documents/CS50/projects/re-set/client/src/components/SetlistResult/SetlistResult.js"],"names":["React","Row","Col","setlistResult","props","styleClass","locationString","setMonth","setDay","setYear","venueName","cityName","countryName","concat","setDate","splitDate","split","rawMonth","isEmpty","setSize","onClick","span","offset","artistName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport 'components/SetlistResult/SetlistResult.css';\n\nconst setlistResult = (props) => {\n        let styleClass = \"setlistResult\";\n        let locationString = 'Unknown';\n        let setMonth = '';\n        let setDay = '';\n        let setYear = '';\n\n        //build string to display set location with Venue, City, State and Country\n        if(props.venueName || props.cityName || props.countryName){\n            locationString = props.venueName;\n            if(props.cityName){\n                locationString = locationString.concat(', ', props.cityName);\n            }\n            if(props.countryName){\n                locationString = locationString.concat(', ', props.countryName);\n            }\n        }\n\n        if(props.setDate){\n            //parse the setlist date to display\n            let splitDate = props.setDate.split(\"-\");\n            setDay = splitDate[0];\n            let rawMonth = splitDate[1];\n            setYear = splitDate[2];\n            switch(rawMonth){\n                case \"01\":\n                    setMonth = \"JAN\";\n                    break;\n                case \"02\":\n                    setMonth = \"FEB\";\n                    break;\n                case \"03\":\n                    setMonth = \"MAR\";\n                    break;\n                case \"04\":\n                    setMonth = \"APR\";\n                    break;\n                case \"05\":\n                    setMonth = \"MAY\";\n                    break;\n                case \"06\":\n                    setMonth = \"JUN\";\n                    break;\n                case \"07\":\n                    setMonth = \"JUL\";\n                    break;\n                case \"08\":\n                    setMonth = \"AUG\";\n                    break;\n                case \"09\":\n                    setMonth = \"SEP\";\n                    break;\n                case \"10\":\n                    setMonth = \"OCT\";\n                    break;\n                case \"11\":\n                    setMonth = \"NOV\";\n                    break;\n                case \"12\":\n                    setMonth = \"DEC\";\n                    break;\n                default:\n                    setMonth = \"UNK\";\n                    break;\n            }\n        }\n\n        let isEmpty = props.setSize === 0;\n        if(isEmpty){\n            styleClass = \"setlistResult emptySet\";\n        }\n\n\n\n        return(\n            <Row className=\"setRow mb-4\" onClick={props.onClick}>\n                <Col md={{ span: 6, offset: 3}} className={styleClass}>\n                    <Row>\n                        <Col lg={{ span: 3 }} md={{ span: 12 }}>\n                        <div className=\"dateBlock\">\n                            <span className=\"month\">{setMonth}</span>\n                            <span className=\"day\">{setDay}</span>\n                            <span className=\"year\">{setYear}</span>\n                        </div>\n                    </Col>\n\n                    <Col lg={{ span: 9 }} md={{ span: 12 }}>\n                        <span className=\"artistName\">{props.artistName}</span>\n                    <div className=\"venue\">{locationString}</div>\n                    <div className=\"numSongs\">{props.setSize} songs</div>\n                    </Col>\n                    </Row>\n\n                </Col>\n            </Row>\n        )\n}\n\nexport default setlistResult;"]},"metadata":{},"sourceType":"module"}