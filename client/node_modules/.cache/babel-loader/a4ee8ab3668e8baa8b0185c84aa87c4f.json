{"ast":null,"code":"import Spotify from 'spotify-web-api-js';\nconst spotifyWebApi = new Spotify();\n\nfunction getHashParams() {\n  var hashParams = {};\n  var e,\n      r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n\n  while (e = r.exec(q)) {\n    hashParams[e[1]] = decodeURIComponent(e[2]);\n  }\n\n  return hashParams;\n}\n\nasync function getUserInfo() {\n  spotifyWebApi.getMe().then(response => {\n    console.log(response);\n    this.setState({\n      displayName: response.display_name\n    });\n  });\n}\n\nfunction setToken(params) {\n  spotifyWebApi.setAccessToken(params.access_token);\n}","map":{"version":3,"sources":["/Users/kevinholt/Documents/CS50/projects/re-set/client/src/spotifyFunctions.js"],"names":["Spotify","spotifyWebApi","getHashParams","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getUserInfo","getMe","then","response","console","log","setState","displayName","display_name","setToken","params","setAccessToken","access_token"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,oBAApB;AAEA,MAAMC,aAAa,GAAG,IAAID,OAAJ,EAAtB;;AAGA,SAASE,aAAT,GAAyB;AACrB,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,CAAJ;AAAA,MAAOC,CAAC,GAAG,sBAAX;AAAA,MACIC,CAAC,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+B,CAA/B,CADR;;AAEA,SAAQN,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAZ,EAAuB;AACpBH,IAAAA,UAAU,CAACC,CAAC,CAAC,CAAD,CAAF,CAAV,GAAmBQ,kBAAkB,CAACR,CAAC,CAAC,CAAD,CAAF,CAArC;AACF;;AACD,SAAOD,UAAP;AACD;;AAED,eAAeU,WAAf,GAA6B;AAC3BZ,EAAAA,aAAa,CAACa,KAAd,GACCC,IADD,CACOC,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,SAAKG,QAAL,CAAc;AACZC,MAAAA,WAAW,EAAEJ,QAAQ,CAACK;AADV,KAAd;AAGD,GAND;AAOH;;AAED,SAASC,QAAT,CAAmBC,MAAnB,EAA2B;AACvBtB,EAAAA,aAAa,CAACuB,cAAd,CAA6BD,MAAM,CAACE,YAApC;AACH","sourcesContent":["import Spotify from 'spotify-web-api-js';\n\nconst spotifyWebApi = new Spotify();\n\n\nfunction getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while ( e = r.exec(q)) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  async function getUserInfo() {\n    spotifyWebApi.getMe()\n    .then((response) => {\n      console.log(response);\n      this.setState({\n        displayName: response.display_name\n      })\n    })\n}\n\nfunction setToken (params) {\n    spotifyWebApi.setAccessToken(params.access_token);\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}