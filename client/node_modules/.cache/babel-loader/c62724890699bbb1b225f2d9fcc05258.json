{"ast":null,"code":"var _jsxFileName = \"/Users/kevinholt/Documents/CS50/projects/re-set/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Search from 'containers/Search/Search';\nimport SearchResults from 'containers/SearchResults/SearchResults';\nimport Layout from 'components/Layout/Layout';\nimport About from 'components/About/About';\nimport Setlists from 'containers/Setlists/Setlists';\nimport ViewSetlist from 'components/ViewSetlist/ViewSetlist';\nimport * as spotifyFunctions from 'spotifyFunctions';\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = spotifyFunctions.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      displayName: ''\n    }; // if (params.access_token){\n    //   spotifyFunctions.setToken(params);\n    // }\n  }\n\n  componentDidMount() {\n    let parse = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n\n    if (!accessToken) {\n      return;\n    }\n\n    spotifyFunctions.getDisplayName().then(response => this.setState({\n      displayName: response.display_name\n    })).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Layout, {\n      loggedIn: this.state.loggedIn,\n      displayName: this.state.displayName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n        loggedIn: this.state.loggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 14\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/results\",\n      component: SearchResults,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/setlists\",\n      component: Setlists,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"view-setlist\",\n      component: ViewSetlist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kevinholt/Documents/CS50/projects/re-set/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Search","SearchResults","Layout","About","Setlists","ViewSetlist","spotifyFunctions","App","constructor","params","getHashParams","state","loggedIn","access_token","displayName","componentDidMount","parse","queryString","window","location","search","accessToken","parsed","getDisplayName","then","response","setState","display_name","catch","error","console","log","render","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAO,KAAKC,gBAAZ,MAAkC,kBAAlC;;AAEA,MAAMC,GAAN,SAAkBZ,SAAlB,CAA4B;AAE1Ba,EAAAA,WAAW,GAAE;AACX;AACA,UAAMC,MAAM,GAAGH,gBAAgB,CAACI,aAAjB,EAAf;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,QAAQ,EAAEH,MAAM,CAACI,YAAP,GAAuB,IAAvB,GAA8B,KAD/B;AAETC,MAAAA,WAAW,EAAE;AAFJ,KAAX,CAHW,CAOX;AACA;AACA;AACD;;AAEDC,EAAAA,iBAAiB,GAAI;AACnB,QAAIC,KAAK,GAAGC,WAAW,CAACD,KAAZ,CAAkBE,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAZ;AACA,QAAIC,WAAW,GAAGC,MAAM,CAACT,YAAzB;;AACA,QAAG,CAACQ,WAAJ,EAAgB;AACd;AACD;;AAECf,IAAAA,gBAAgB,CAACiB,cAAjB,GACLC,IADK,CACCC,QAAQ,IACb,KAAKC,QAAL,CACA;AAACZ,MAAAA,WAAW,EAAEW,QAAQ,CAACE;AAAvB,KADA,CAFI,EAKJC,KALI,CAKE,UAASC,KAAT,EAAe;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAPI;AASD;;AAGHG,EAAAA,MAAM,GAAG;AACL,wBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACF,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWC,QAA7B;AAAuC,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWG,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,MAAM,EAAEmB,KAAK,iBAClC,oBAAC,MAAD,oBAAYA,KAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKtB,KAAL,CAAWC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAEX,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,eAIG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEE,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJH,eAKG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,SAAS,EAAEC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALH,eAMG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,cAAZ;AAA2B,MAAA,SAAS,EAAEC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANH,CADJ,CADE,CADF;AAcH;;AAhDyB;;AAmD5B,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Search from 'containers/Search/Search';\nimport SearchResults from 'containers/SearchResults/SearchResults';\nimport Layout from 'components/Layout/Layout';\nimport About from 'components/About/About';\nimport Setlists from 'containers/Setlists/Setlists';\nimport ViewSetlist from 'components/ViewSetlist/ViewSetlist';\nimport * as spotifyFunctions from 'spotifyFunctions';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    const params = spotifyFunctions.getHashParams();\n    this.state={\n      loggedIn: params.access_token  ? true : false,\n      displayName: ''\n    }\n    // if (params.access_token){\n    //   spotifyFunctions.setToken(params);\n    // }\n  }\n\n  componentDidMount () {\n    let parse = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n    if(!accessToken){\n      return;\n    }\n\n      spotifyFunctions.getDisplayName()\n.then((response =>  \n  this.setState(\n  {displayName: response.display_name}\n )))\n .catch(function(error){\n   console.log(error);\n });\n\n    }\n\n\n  render() {\n      return (\n        <Router>\n      <Layout loggedIn={this.state.loggedIn} displayName={this.state.displayName} >\n          <Switch>\n            <Route exact path=\"/\" render={props =>\n            (<Search {...props} loggedIn={this.state.loggedIn} />)}/>\n             <Route path=\"/results\" component={SearchResults} />\n             <Route path=\"/about\" component={About} />\n             <Route path=\"/setlists\" component={Setlists} />\n             <Route path=\"view-setlist\" component={ViewSetlist} />\n          </Switch>\n        </Layout>\n  </Router>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}