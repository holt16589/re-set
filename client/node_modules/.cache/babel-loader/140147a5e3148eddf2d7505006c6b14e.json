{"ast":null,"code":"var _jsxFileName = \"/Users/kevinholt/Documents/CS50/projects/re-set/client/src/components/UI/ScrollUp/ScrollUp.js\";\nimport React, { Component } from 'react';\nimport 'components/UI/ScrollUp/ScrollUp.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleUp } from '@fortawesome/free-solid-svg-icons';\n\nclass ScrollUp extends Component {\n  constructor() {\n    super();\n\n    this.scrollToTop = () => {\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    };\n\n    this.scrollHandler = () => {\n      if (window.pageYOffset === 0) {\n        this.setState({\n          showBtn: false\n        });\n      } else {\n        this.setState({\n          showBtn: true\n        });\n      }\n    };\n\n    this.state = {\n      showBtn: false\n    };\n  }\n\n  compontentDidMount() {\n    window.addEventListener('scroll', this.scrollHandler);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.scrollHandler);\n  }\n\n  render() {\n    let button = null;\n\n    if (this.state.showBtn) {\n      button = /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faChevronCircleUp,\n        id: \"scrollBtn\",\n        color: \"white\",\n        size: \"lg\",\n        onClick: this.scrollToTop,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 16\n        }\n      });\n    } else {\n      button = null;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, button);\n  }\n\n}\n\nexport default ScrollUp;","map":{"version":3,"sources":["/Users/kevinholt/Documents/CS50/projects/re-set/client/src/components/UI/ScrollUp/ScrollUp.js"],"names":["React","Component","FontAwesomeIcon","faChevronCircleUp","ScrollUp","constructor","scrollToTop","window","scrollTo","top","behavior","scrollHandler","pageYOffset","setState","showBtn","state","compontentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","button"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,qCAAP;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,iBAAT,QAAkC,mCAAlC;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC/BI,EAAAA,WAAW,GAAE;AACX;;AADW,SAefC,WAfe,GAeD,MAAM;AAClBC,MAAAA,MAAM,CAACC,QAAP,CAAgB;AAACC,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,QAAQ,EAAE;AAAnB,OAAhB;AACC,KAjBY;;AAAA,SAmBbC,aAnBa,GAmBG,MAAM;AACpB,UAAGJ,MAAM,CAACK,WAAP,KAAuB,CAA1B,EAA4B;AAC1B,aAAKC,QAAL,CAAc;AAACC,UAAAA,OAAO,EAAE;AAAV,SAAd;AACH,OAFC,MAGE;AACF,aAAKD,QAAL,CAAc;AAACC,UAAAA,OAAO,EAAE;AAAV,SAAd;AACD;AACA,KA1BY;;AAEX,SAAKC,KAAL,GAAW;AACPD,MAAAA,OAAO,EAAE;AADF,KAAX;AAGH;;AAEDE,EAAAA,kBAAkB,GAAE;AAClBT,IAAAA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAkC,KAAKN,aAAvC;AACD;;AAEDO,EAAAA,oBAAoB,GAAG;AACrBX,IAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqC,KAAKR,aAA1C;AACD;;AAeCS,EAAAA,MAAM,GAAE;AACN,QAAIC,MAAM,GAAG,IAAb;;AACA,QAAG,KAAKN,KAAL,CAAWD,OAAd,EAAsB;AACpBO,MAAAA,MAAM,gBAAG,oBAAC,eAAD;AACT,QAAA,IAAI,EAAElB,iBADG;AACgB,QAAA,EAAE,EAAC,WADnB;AAC+B,QAAA,KAAK,EAAC,OADrC;AAC6C,QAAA,IAAI,EAAC,IADlD;AACuD,QAAA,OAAO,EAAE,KAAKG,WADrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT;AAED,KAHD,MAII;AACFe,MAAAA,MAAM,GAAG,IAAT;AACD;;AACD,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEA,MADF,CADF;AAKD;;AA3C8B;;AA8CjC,eAAejB,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport 'components/UI/ScrollUp/ScrollUp.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronCircleUp } from '@fortawesome/free-solid-svg-icons'\n\nclass ScrollUp extends Component {\n  constructor(){\n    super();\n    this.state={\n        showBtn: false\n    }   \n}\n\ncompontentDidMount(){\n  window.addEventListener('scroll', this.scrollHandler);\n}\n\ncomponentWillUnmount() {\n  window.removeEventListener('scroll', this.scrollHandler);\n}\n\nscrollToTop = () => {\n  window.scrollTo({top: 0, behavior: \"smooth\"});\n  }\n\n  scrollHandler = () => {\n    if(window.pageYOffset === 0){\n      this.setState({showBtn: false});\n  }\n  else{\n    this.setState({showBtn: true});\n  }\n  }\n\n  render(){\n    let button = null;\n    if(this.state.showBtn){\n      button = <FontAwesomeIcon\n      icon={faChevronCircleUp} id=\"scrollBtn\" color=\"white\" size=\"lg\" onClick={this.scrollToTop} />;\n    }\n    else{\n      button = null;\n    }\n    return(\n      <React.Fragment>\n       {button} \n      </React.Fragment>\n    )\n  }\n}\n\nexport default ScrollUp;"]},"metadata":{},"sourceType":"module"}