{"ast":null,"code":"var _jsxFileName = \"/Users/kevinholt/Documents/CS50/projects/re-set/client/src/containers/SearchResults/SearchResults.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport ScrollUp from 'components/UI/ScrollUp/ScrollUp';\nimport taken from 'assets/taken.png';\nimport 'containers/SearchResults/SearchResults.css';\nimport Spinner from 'components/UI/Spinner/Spinner';\nimport * as spotifyFunctions from 'spotifyFunctions';\n\nclass SearchResults extends Component {\n  constructor() {\n    super();\n\n    this.scrollToTop = () => {\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    };\n\n    this.artistClickHandler = () => {\n      console.log('hehehe you clicked me!');\n    };\n\n    this.state = {\n      searchValue: null,\n      loading: false,\n      result: null,\n      showScrollBtn: false\n    };\n  }\n\n  componentWillMount() {\n    console.log(this.props.location.state.searchValue);\n    this.setState({\n      searchValue: this.props.location.state.searchValue\n    });\n  }\n\n  componentDidMount() {\n    if (this.state.searchValue) {\n      this.setState({\n        loading: true\n      });\n      spotifyFunctions.searchForArtist(this.state.searchValue).then(response => {\n        let searchResult = response.artists.items;\n        this.setState({\n          loading: false,\n          result: searchResult\n        });\n      }).catch(error => {\n        this.setState({\n          loading: false\n        });\n        console.log(error);\n      });\n    }\n\n    window.addEventListener('scroll', () => {\n      if (window.pageYOffset === 0) {\n        this.setState({\n          showScrollBtn: false\n        });\n      } else {\n        this.setState({\n          showScrollBtn: true\n        });\n      }\n    });\n  }\n\n  render() {\n    let displayResults = '';\n    let displayScrollBtn = null;\n\n    if (this.state.result) {\n      displayResults = Object.keys(this.state.result).map(artistKey => {\n        if (this.state.result[artistKey].images.length > 2) {\n          return /*#__PURE__*/React.createElement(Row, {\n            key: artistKey,\n            className: \"mb-4\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(Col, {\n            md: {\n              span: 8,\n              offset: 2\n            },\n            className: \"resultBody mb-4 my-auto\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            className: \"roundedImg\",\n            src: this.state.result[artistKey].images[1].url,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(\"h3\", {\n            className: \"mt-3\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }\n          }, this.state.result[artistKey].name)));\n        } else {\n          return /*#__PURE__*/React.createElement(Row, {\n            key: artistKey,\n            className: \"mb-4\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(Col, {\n            md: {\n              span: 8,\n              offset: 2\n            },\n            className: \"resultBody mb-4 my-auto\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            className: \"roundedImg\",\n            src: taken,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(\"h3\", {\n            className: \"mt-3\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"artistName\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 46\n            }\n          }, this.state.result[artistKey].name))));\n        }\n      });\n\n      if (Object.keys(this.state.result).length === 0) {\n        displayResults = /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 42\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: {\n            span: 8,\n            offset: 2\n          },\n          className: \"resultBody mb-4 my-auto\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }\n        }, \"No matching artists were found, please try searching again!\")));\n      }\n    }\n\n    if (this.state.loading) {\n      displayResults = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 34\n        }\n      });\n    }\n\n    if (this.state.showScrollBtn) {\n      displayScrollBtn = /*#__PURE__*/React.createElement(ScrollUp, {\n        clicked: this.scrollToTop,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 34\n        }\n      });\n    } else {\n      displayScrollBtn = null;\n    }\n\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"results-section mb-5\",\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"resultsTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 36\n      }\n    }, \"Results\")), displayResults, displayScrollBtn);\n  }\n\n}\n\nexport default withRouter(SearchResults);","map":{"version":3,"sources":["/Users/kevinholt/Documents/CS50/projects/re-set/client/src/containers/SearchResults/SearchResults.js"],"names":["React","Component","Container","Row","Col","withRouter","ScrollUp","taken","Spinner","spotifyFunctions","SearchResults","constructor","scrollToTop","window","scrollTo","top","behavior","artistClickHandler","console","log","state","searchValue","loading","result","showScrollBtn","componentWillMount","props","location","setState","componentDidMount","searchForArtist","then","response","searchResult","artists","items","catch","error","addEventListener","pageYOffset","render","displayResults","displayScrollBtn","Object","keys","map","artistKey","images","length","span","offset","url","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport ScrollUp from 'components/UI/ScrollUp/ScrollUp';\nimport taken from 'assets/taken.png';\nimport 'containers/SearchResults/SearchResults.css';\nimport Spinner from 'components/UI/Spinner/Spinner';\nimport * as spotifyFunctions from 'spotifyFunctions';\n\nclass SearchResults extends Component {\n       constructor(){\n                super();\n                this.state={\n                    searchValue: null,\n                    loading: false,\n                    result: null,\n                    showScrollBtn: false\n                }   \n            }\n            \n            componentWillMount() {\n                console.log(this.props.location.state.searchValue);\n                this.setState({searchValue: this.props.location.state.searchValue});\n            }\n\n            componentDidMount(){\n                if(this.state.searchValue){\n                this.setState({loading: true});\n                spotifyFunctions.searchForArtist(this.state.searchValue)\n              .then((response => {\n                let searchResult = response.artists.items;\n                this.setState({loading: false, result: searchResult});\n              }))   \n              .catch((error => {\n                this.setState({loading: false});\n                console.log(error);\n              }));\n                }\n\n                window.addEventListener('scroll', () => {\n                  if(window.pageYOffset === 0){\n                      this.setState({showScrollBtn: false});\n                  }\n                  else{\n                    this.setState({showScrollBtn: true});\n                  }\n            })\n            }\n\n            scrollToTop = () => {\n              window.scrollTo({top: 0, behavior: \"smooth\"})\n            }\n\n            artistClickHandler = () => {\n              console.log('hehehe you clicked me!')\n            }\n\n\n        render () {\n            let displayResults = '';\n            let displayScrollBtn = null;\n            if(this.state.result){\n                displayResults =  Object.keys( this.state.result )\n                .map( artistKey => {\n                  if(this.state.result[artistKey].images.length > 2){\n                    return (\n                      <Row key={artistKey} className=\"mb-4\">\n                        <Col md={{ span: 8, offset: 2 }} className=\"resultBody mb-4 my-auto\">\n                        <img className=\"roundedImg\" src={this.state.result[artistKey].images[1].url}/>\n                        <h3 className=\"mt-3\">{this.state.result[artistKey].name}</h3>\n                        </Col>\n                        </Row>\n                        ); \n                  }\n                  else{\n                    return (\n                      <Row key={artistKey} className=\"mb-4\">\n                        <Col md={{ span: 8, offset: 2 }} className=\"resultBody mb-4 my-auto\">\n                        <img className=\"roundedImg\" src={taken}/>\n                        <h3 className=\"mt-3\"><span className=\"artistName\">{this.state.result[artistKey].name}</span></h3>\n                        </Col>\n                        </Row>\n                        ); \n                  }\n            \n                      } );\n                      if(Object.keys( this.state.result ).length === 0){\n                        displayResults = <Row>\n                          <Col md={{ span: 8, offset: 2 }} className=\"resultBody mb-4 my-auto\">\n                            <h3>No matching artists were found, please try searching again!</h3>\n                            </Col>\n                        </Row>\n                      }\n            }\n            if( this.state.loading ){\n                displayResults = <Spinner />\n            }\n\n            if( this.state.showScrollBtn ){\n              displayScrollBtn = <ScrollUp clicked={this.scrollToTop} />;\n            }\n            else{\n              displayScrollBtn = null;\n            }\n\n        return(\n            <Container className = \"results-section mb-5\" fluid>\n              <h1 className=\"mb-5\"><span className=\"resultsTitle\">Results</span></h1>\n              {displayResults}\n                {displayScrollBtn}\n                </Container>\n                )       \n        }\n    }\n    \nexport default withRouter(SearchResults);"]},"metadata":{},"sourceType":"module"}